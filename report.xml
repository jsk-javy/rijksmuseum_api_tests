<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="10" time="20.497" timestamp="2024-11-20T13:41:05.469411+01:00" hostname="ALFEN-AP-HRQMBL"><testcase classname="Tests.test_collection_details" name="test_collection_details[SK-C-1368]" time="0.287" /><testcase classname="Tests.test_collection_details" name="test_collection_details[SK-A-4050]" time="0.267" /><testcase classname="Tests.test_collection_details" name="test_collection_details[SK-C-5]" time="0.323" /><testcase classname="Tests.test_collection_details" name="test_retrieve_collection" time="1.158" /><testcase classname="Tests.test_rijkmuseum_api" name="test_retrieve_object_details" time="5.896" /><testcase classname="Tests.test_rijkmuseum_api" name="test_invalid_object_id" time="0.177" /><testcase classname="Tests.test_rijkmuseum_api" name="test_invalid_parameters" time="1.153"><failure message="AssertionError: Expected non 200 status code for invalid params&#10;assert 200 != 200&#10; +  where 200 = &lt;Response [200]&gt;.status_code">def test_invalid_parameters():
        response = requests.get(f"{API_BASE_URLS}", params ={"key": API_KEY, "format": "json", "test": 2})
        print(response.status_code)
        data = response.json()
        print(json.dumps(data, indent=0))
&gt;       assert response.status_code != 200, "Expected non 200 status code for invalid params"
E       AssertionError: Expected non 200 status code for invalid params
E       assert 200 != 200
E        +  where 200 = &lt;Response [200]&gt;.status_code

Tests\test_rijkmuseum_api.py:45: AssertionError</failure></testcase><testcase classname="Tests.test_rijkmuseum_api" name="test_incorrect_api_key" time="0.175" /><testcase classname="Tests.test_rijkmuseum_api" name="test_api_performance" time="1.241"><failure message="AssertionError: Response took too long: 1.2404358386993408 sec.&#10;assert 1.2404358386993408 &lt; 1.0">def test_api_performance():
        # Response time validation
        start_time = time.time()
        response = requests.get(f"{API_BASE_URLS}", params= {"key": API_KEY, "format": "json"})
        response_time = time.time() - start_time
&gt;       assert response_time &lt; 1.0, f"Response took too long: {response_time} sec."
E       AssertionError: Response took too long: 1.2404358386993408 sec.
E       assert 1.2404358386993408 &lt; 1.0

Tests\test_rijkmuseum_api.py:61: AssertionError</failure></testcase><testcase classname="Tests.test_rijkmuseum_api" name="test_high_volume_api" time="6.323" /></testsuite></testsuites>